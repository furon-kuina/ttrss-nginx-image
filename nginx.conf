# Most of the code is copied from https://gitlab.tt-rss.org/tt-rss/tt-rss/-/blob/master/.docker/web-nginx/nginx.conf
worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
	include /etc/nginx/mime.types;
	default_type  application/octet-stream;

	access_log /dev/stdout;
	error_log /dev/stderr warn;

	sendfile on;

	index index.php;

	resolver ${RESOLVER} valid=5s;

	server {
		listen 80;
		listen [::]:80;
		root ${APP_WEB_ROOT};

		location ${APP_BASE}/cache {
			aio threads;
			internal;
		}

		location ${APP_BASE}/backups {
			internal;
		}

		rewrite ${APP_BASE}/healthz ${APP_BASE}/public.php?op=healthcheck;

		# Regular PHP handling (without PATH_INFO)
		location ~ \.php$ {
			# regex to split $uri to $fastcgi_script_name and $fastcgi_path
			fastcgi_split_path_info ^(.+?\.php)(/.*)$;

			# Check that the PHP script exists before passing it
			try_files $fastcgi_script_name =404;

			fastcgi_index index.php;
			include fastcgi.conf;

			set $backend "${APP_UPSTREAM}:9000";

			fastcgi_pass $backend;
      fastcgi_param HTTPS on;
		}

		# Allow PATH_INFO for PHP files in plugins.local directories with an /api/ sub directory to allow plugins to leverage when desired
		location ~ /plugins\.local/.*/api/.*\.php(/|$) {
			# regex to split $uri to $fastcgi_script_name and $fastcgi_path
			fastcgi_split_path_info ^(.+?\.php)(/.*)$;

			# Check that the PHP script exists before passing it
			try_files $fastcgi_script_name =404;

			# Bypass the fact that try_files resets $fastcgi_path_info
			# see: http://trac.nginx.org/nginx/ticket/321
			set $path_info $fastcgi_path_info;
			fastcgi_param PATH_INFO $path_info;

			fastcgi_index index.php;
			include fastcgi.conf;

			set $backend "${APP_UPSTREAM}:9000";

			fastcgi_pass $backend;
      fastcgi_param HTTPS on;
		}
		
		location / {
			try_files $uri $uri/ =404;
		}
	}
}
